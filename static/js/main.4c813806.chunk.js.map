{"version":3,"sources":["assets/img/icons/tree.svg","components/NewTreeStory.jsx","components/Marker.jsx","service/treedataservice.js","components/TreeStory.jsx","components/PublicTreeMap.jsx","assets/img/icons/coin.svg","assets/img/icons/certificate.svg","components/PrivateHome.jsx","components/PublicHome.jsx","components/DemoNavbar.js","components/HomePage.jsx","App.js","reportWebVitals.js","index.js","assets/img/brand/argon-react.png"],"names":["NewTreeStory","props","open","onClose","Modal","isOpen","toggle","ModalHeader","ModalBody","Container","Row","Col","alt","src","tree","style","height","FormGroup","Label","for","Input","type","name","id","ModalFooter","Button","color","onClick","Wrapper","styled","div","Marker","story","owner","TreeLocationSampleData","uniqueId","lat","lng","planteddate","GetAllTree","TreeStory","AnyReactComponent","text","PublicTreemap","state","modalOpen","undefined","modalClose","setState","data","this","user","filter","x","width","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","map","item","Component","defaultProps","PrivateHome","Wallet","Card","CardBody","CardTitle","tag","CardSubtitle","className","coin","CardText","Asset","Certificate","certificate","PublicHome","marginBottom","TreeIcon","minWidth","Bubbles","DemoNavbar","collapseClasses","collapseOpen","onExiting","onExited","onLogin","e","preventDefault","isLoggedIn","openModal","window","sessionStorage","setItem","login","closeModal","logOut","removeItem","Navbar","expand","UncontrolledCollapse","toggler","navbar","xs","require","Nav","UncontrolledDropdown","nav","DropdownToggle","DropdownMenu","Media","href","target","body","NavItem","NavLink","UncontrolledTooltip","delay","marginRight","React","HomePage","getItem","useState","Date","now","setRender","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"waAAe,MAA0B,iC,OCI5BA,EAAe,SAACC,GACzB,IAAQC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAO,eAACC,EAAA,EAAD,CAAOC,OAAQH,EAAMI,OAAQH,EAA7B,UACH,cAACI,EAAA,EAAD,CAAaD,OAAQH,EAArB,iDACA,cAACK,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,UAAK,qBAAKC,IAAI,MAAMC,IAAKC,EAAMC,MAAO,CAAEC,OAAQ,YAChD,cAACL,EAAA,EAAD,OAEJ,cAACD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,sBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,gBAIxB,uBACA,cAACX,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACM,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,wCACA,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,KAAK,OAAOC,GAAG,sBAM1D,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASxB,EAAjC,oBACA,cAACsB,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASxB,EAAnC,0B,iCCjCNyB,E,MAAUC,EAAOC,IAAV,6NAQD,SAAC7B,GAAD,OAAYA,EAAM0B,QAAU,UAAY,aAgBrCI,EAVA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOL,EAAV,EAAUA,QAAV,OACX,cAACC,EAAD,CACIhB,IAAKoB,EAAMC,MACXN,QAAS,WAAMA,EAAQK,IAF3B,SAII,cAAC,GAAD,OCvBFE,EAAyB,CAAC,CAAEC,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAmBJ,MAAO,cAAgBK,YAAa,cAAeN,MAAO,yFAC3J,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAmBJ,MAAO,QAASK,YAAa,cAAeN,MAAO,+DACpH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAmBJ,MAAO,QAASK,YAAa,cAAeN,MAAO,+DACpH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAoBJ,MAAO,QAAUK,YAAa,cAAeN,MAAO,+DACtH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAoBJ,MAAO,QAAUK,YAAa,cAAeN,MAAO,+DACtH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAoBJ,MAAO,QAAUK,YAAa,cAAeN,MAAO,wDACtH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAmBJ,MAAO,YAAcK,YAAa,cAAeN,MAAO,uDACzH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAoBJ,MAAO,QAAUK,YAAa,cAAeN,MAAO,uCACtH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAoBJ,MAAO,QAAUK,YAAa,cAAeN,MAAO,uCACtH,CAAEG,SAAU,IAAKC,IAAK,kBAAmBC,IAAK,kBAAoBJ,MAAO,SAAWK,YAAa,cAAeN,MAAO,yCAE1GO,EAAa,WACtB,OAAOL,GCREM,EAAY,SAACvC,GACtB,IAAQC,EAA6CD,EAA7CC,KAAM+B,EAAuChC,EAAvCgC,MAAO9B,EAAgCF,EAAhCE,QAAS6B,EAAuB/B,EAAvB+B,MAAOM,EAAgBrC,EAAhBqC,YAErC,OAAO,eAAClC,EAAA,EAAD,CAAOC,OAAQH,EAAMI,OAAQH,EAA7B,UACH,eAACI,EAAA,EAAD,CAAaD,OAAQH,EAArB,UAA+B8B,EAA/B,sBAAyDK,KACzD,cAAC9B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,qBAAKC,IAAI,MAAMC,IAAKC,EAAMC,MAAO,CAAEC,OAAQ,aAE/C,cAACL,EAAA,EAAD,UACKqB,WAKjB,cAACR,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASxB,EAAjC,yBCdNsC,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,8BAAMA,KAExCC,E,4MAUJC,MAAO,CACLC,WAAW,EACXb,WAAOc,G,EAGTC,WAAa,WACX,EAAKC,SAAS,CACZH,WAAW,EACXb,WAAOc,K,EAIXD,UAAY,SAACb,GAEX,EAAKgB,SAAS,CACZH,WAAW,EACXb,MAAOA,K,4CAIX,WAAU,IAAD,OACHiB,EAAOV,IAMX,OAJGW,KAAKjD,MAAMkD,MACZF,EAAKG,QAAO,SAAAC,GAAC,OAAEA,EAAEpB,OAAS,EAAKhC,MAAMkD,QAKrC,aADA,CACA,OAAKpC,MAAO,CAAEC,OAAQ,OAAQsC,MAAO,QAArC,SACE,eAAC,IAAD,CACEC,iBAAkB,CAAEC,IA7CH,2CA8CjBC,cAAeP,KAAKjD,MAAMyD,OAC1BC,YAAaT,KAAKjD,MAAM2D,KAH1B,UAKE,cAAC,EAAD,CACExB,IAAK,kBACLC,IAAK,kBACLK,KAAK,WAITH,IAAasB,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAErB9B,MAAO8B,EACP1B,IAAM0B,EAAK1B,IACXC,IAAKyB,EAAKzB,IACVV,QAAU,EAAKkB,WALM,UACbiB,EAAK7B,MADQ,YACC6B,EAAK3B,cAO9Be,KAAKN,MAAMZ,OAAS,cAAC,EAAD,aAAW9B,KAAQgD,KAAKN,MAAMC,UAAW1C,QAAW+C,KAAKH,YAAgBG,KAAKN,MAAMZ,iB,GA5DrF+B,aAAtBpB,EAEGqB,aAAe,CACpBN,OAAQ,CACNtB,IAAK,kBACLC,IAAK,mBAEPuB,KAAM,IA4DKjB,QC7EA,MAA0B,iCCA1B,MAA0B,wC,8CCqB5BsB,GAAc,WACvB,OAAO,cAACxD,EAAA,EAAD,UACH,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,GAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,GAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,GAAD,YAMHuD,GAAS,WAClB,OAAO,eAACC,EAAA,EAAD,WACH,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,eACA,cAACC,EAAA,EAAD,CAAcD,IAAI,KAAKE,UAAU,kBAAjC,2BAEF,qBAAKlB,MAAM,OAAOzC,IAAK4D,EAAM7D,IAAI,iBAAiBG,MAAO,CAACC,OAAQ,UAClE,cAACoD,EAAA,EAAD,UACE,cAACM,GAAA,EAAD,4CAKGC,GAAQ,WACjB,OAAO,eAACR,EAAA,EAAD,WACH,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,uBACA,cAACC,EAAA,EAAD,CAAcD,IAAI,KAAKE,UAAU,kBAAjC,gCAEF,qBAAKlB,MAAM,OAAOzC,IAAKC,EAAMF,IAAI,iBAAiBG,MAAO,CAACC,OAAQ,UAClE,cAACoD,EAAA,EAAD,UACE,cAACM,GAAA,EAAD,sCAKGE,GAAc,WACvB,OAAO,eAACT,EAAA,EAAD,WACH,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,iBACA,cAACC,EAAA,EAAD,CAAcD,IAAI,KAAKE,UAAU,kBAAjC,sCAEF,qBAAKlB,MAAM,OAAOzC,IAAKgE,EAAajE,IAAI,iBAAiBG,MAAO,CAACC,OAAQ,UACzE,cAACoD,EAAA,EAAD,UACE,cAACM,GAAA,EAAD,iDCxDGI,GAAa,SAAC,GAAY,IAAX3B,EAAU,EAAVA,KACxB,OAAO,+BACH,qBAAKqB,UAAU,oBAAf,SACI,0BAASA,UAAU,2CAAnB,UACI,cAAC,GAAD,IACA,yBAASzD,MAAO,CAACgE,aAAc,QAA/B,SACC5B,GAAQ,cAAC,GAAD,MAET,kCACI,cAAC,EAAD,CAAeA,KAAMA,cAc5B6B,GAAW,WACpB,OAAO,sBAAMR,UAAU,uBAAuBzD,MAAO,CAAEkE,SAAU,QAA1D,SACP,qBAAKrE,IAAI,MAAMC,IAAKC,OAIXoE,GAAU,WACnB,OAAO,sBAAKV,UAAU,oCAAf,UACH,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,6BC9BFW,G,4MACJvC,MAAQ,CACNwC,gBAAiB,GACjBC,cAAc,G,EAGhBC,UAAY,WACV,EAAKtC,SAAS,CACZoC,gBAAiB,oB,EAIrBG,SAAW,WACT,EAAKvC,SAAS,CACZoC,gBAAiB,M,EAIrBI,QAAW,SAACC,GACVA,EAAEC,iBACC,EAAKzF,MAAM0F,WACZ,EAAK3C,SAAS,CACZ4C,WAAW,KAGbC,OAAOC,eAAeC,QAAQ,UAAW,SACzC,EAAK9F,MAAM+F,U,EAIfC,WAAa,WACX,EAAKjD,SAAS,CACZ4C,WAAW,K,EAIfM,OAAS,SAACT,GACRA,EAAEC,iBACFG,OAAOC,eAAeK,WAAW,WACjC,EAAKlG,MAAM+F,S,4CAGb,WACE,OACE,mCACE,wBAAQxB,UAAU,gBAAlB,SACE,cAAC4B,EAAA,EAAD,CACE5B,UAAU,uDACV6B,OAAO,KACP9E,GAAG,cAHL,SAKE,eAACd,EAAA,EAAD,WACE,eAAC6F,EAAA,EAAD,CACEC,QAAQ,iBACRC,QAAM,EACNhC,UAAWtB,KAAKN,MAAMwC,gBACtBE,UAAWpC,KAAKoC,UAChBC,SAAUrC,KAAKqC,SALjB,UAOE,qBAAKf,UAAU,yBAAf,SACE,eAAC9D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK6D,UAAU,iBAAiBiC,GAAG,IAAnC,SAEI,qBACE7F,IAAI,MACJC,IAAK6F,EAAQ,QAInB,cAAC/F,EAAA,EAAD,CAAK6D,UAAU,iBAAiBiC,GAAG,IAAnC,SACE,yBAAQjC,UAAU,iBAAiBjD,GAAG,gBAAtC,UACE,yBACA,mCAKR,cAACoF,EAAA,EAAD,CAAKnC,UAAU,yCAAyCgC,QAAM,EAA9D,SACE,eAACI,EAAA,EAAD,CAAsBC,KAAG,EAAzB,UACE,eAACC,EAAA,EAAD,CAAgBD,KAAG,EAAnB,UACE,mBAAGrC,UAAU,+BACb,sBAAMA,UAAU,uBAAhB,8BAEF,cAACuC,EAAA,EAAD,CAAcvC,UAAU,mBAAxB,SACE,sBAAKA,UAAU,sBAAf,UACE,eAACwC,EAAA,EAAD,CACExC,UAAU,4BACVyC,KAAK,oGACLC,OAAO,SAHT,UAKE,qBAAK1C,UAAU,gEAAf,SACE,mBAAGA,UAAU,sBAEf,eAACwC,EAAA,EAAD,CAAOG,MAAI,EAAC3C,UAAU,OAAtB,UACE,oBAAIA,UAAU,+BAAd,6BAGA,mBAAGA,UAAU,4CAAb,8CAKJ,eAACwC,EAAA,EAAD,CACExC,UAAU,4BACVyC,KAAK,kGACLC,OAAO,SAHT,UAKE,qBAAK1C,UAAU,gEAAf,SACE,mBAAGA,UAAU,oBAEf,eAACwC,EAAA,EAAD,CAAOG,MAAI,EAAC3C,UAAU,OAAtB,UACE,oBAAIA,UAAU,+BAAd,wBAGA,mBAAGA,UAAU,4CAAb,mDAKJ,eAACwC,EAAA,EAAD,CACExC,UAAU,4BACVyC,KAAK,iGACLC,OAAO,SAHT,UAKE,qBAAK1C,UAAU,gEAAf,SACE,mBAAGA,UAAU,kBAEf,eAACwC,EAAA,EAAD,CAAOG,MAAI,EAAC3C,UAAU,OAAtB,UACE,oBAAIA,UAAU,+BAAd,mBAGA,mBAAGA,UAAU,4CAAb,uDAUZ,eAACmC,EAAA,EAAD,CAAKnC,UAAU,mCAAmCgC,QAAM,EAAxD,UACE,eAACY,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACE7C,UAAU,gBACVyC,KAAK,wCACL1F,GAAG,mBACH2F,OAAO,SAJT,UAME,mBAAG1C,UAAU,0BACb,sBAAMA,UAAU,sCAAhB,yBAIF,cAAC8C,EAAA,EAAD,CAAqBC,MAAO,EAAGL,OAAO,mBAAtC,oCAIF,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACE7C,UAAU,gBACVyC,KAAK,yCACL1F,GAAG,mBACH2F,OAAO,SAJT,UAME,mBAAG1C,UAAU,oBACb,sBAAMA,UAAU,sCAAhB,0BAIF,cAAC8C,EAAA,EAAD,CAAqBC,MAAO,EAAGL,OAAO,mBAAtC,uCAIF,eAACE,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACE7C,UAAU,gBACVyC,KAAK,mCACL1F,GAAG,mBACH2F,OAAO,SAJT,UAME,mBAAG1C,UAAU,yBACb,sBAAMA,UAAU,sCAAhB,wBAIF,cAAC8C,EAAA,EAAD,CAAqBC,MAAO,EAAGL,OAAO,mBAAtC,qCAIF,eAACE,EAAA,EAAD,CAAS5C,UAAU,4BAAnB,UACA,sBAAMzD,MAAO,CAACW,MAAO,QAAS8F,YAAa,OAA3C,SAAqDtE,KAAKjD,MAAM0F,WAAX,gBAAiCzC,KAAKjD,MAAM0F,YAAc,KAC7GzC,KAAKjD,MAAM0F,YAAc,cAAClE,EAAA,EAAD,CAASE,QAASuB,KAAKgD,OAAvB,qBAC3B,eAACzE,EAAA,EAAD,CACI+C,UAAU,uBACV9C,MAAM,UACNuF,KAAK,IACLtF,QAASuB,KAAKsC,QAJlB,UAMI,sBAAMhB,UAAU,kBAAhB,SACE,mBAAGA,UAAU,gCAEf,sBAAMA,UAAU,4BAAhB,SAEGtB,KAAKjD,MAAM0F,WAAa,qBAAuB,uBAO1D,cAAC,EAAD,CAAczF,KAAQgD,KAAKN,MAAMgD,UAAWzF,QAAU+C,KAAK+C,0B,GAnNhDwB,IAAM1D,WA4NhBoB,MC7NAuC,GAjBE,WAEf,IAAMvE,EAAQ0C,OAAOC,eAAe6B,QAAQ,WAC1C,EAA2BC,mBAASC,KAAKC,KAAzC,mBAAcC,GAAd,WAMA,OACE,qCACE,cAAC,GAAD,CAAYpC,WAAYxC,EAAM6C,MANjB,WACf+B,EAAUF,KAAKC,QAMb,cAAC,GAAD,CAAY3E,KAAMA,QCHX6E,OARf,WACE,OACE,qBAAKxD,UAAU,MAAf,SACE,cAAC,GAAD,OCESyD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,GAAD,IAEFC,SAASC,eAAe,SAM1BZ,M,yICfA,OAAe,cAA0B,0C","file":"static/js/main.4c813806.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tree.c19a9df7.svg\";","import react from 'react'\r\nimport { Button, Container, Modal, ModalBody, ModalFooter, ModalHeader, Row, Col, Input, Label, FormGroup } from 'reactstrap'\r\nimport tree from '../assets/img/icons/tree.svg'\r\n\r\nexport const NewTreeStory = (props) => {\r\n    const { open, onClose } = props\r\n\r\n    return <Modal isOpen={open} toggle={onClose} >\r\n        <ModalHeader toggle={onClose}>Submit the request to plant a Tree.</ModalHeader>\r\n        <ModalBody>\r\n            <Container>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col><img alt=\"...\" src={tree} style={{ height: '5rem' }} /></Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"story\">Location</Label>\r\n                            <Input type=\"text\"></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"story\">Your story behind the tree</Label>\r\n                            <Input type=\"textarea\" name=\"text\" id=\"story\" />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <Button color=\"primary\" onClick={onClose}>Submit</Button>\r\n            <Button color=\"secondary\" onClick={onClose}>Close</Button>\r\n        </ModalFooter>\r\n    </Modal>\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TreeIcon } from './PublicHome';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  user-select: none;\r\n  transform: translate(-50%, -50%);\r\n  cursor: ${(props) => (props.onClick ? 'pointer' : 'default')};\r\n  &:hover {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Marker = ({ story, onClick }) => (\r\n    <Wrapper\r\n        alt={story.owner}\r\n        onClick={()=> {onClick(story)}}\r\n    >\r\n        <TreeIcon />\r\n    </Wrapper>\r\n);\r\n\r\n\r\nexport default Marker;","const TreeLocationSampleData = [{ uniqueId: 101, lat: 59.81921097726422, lng: 10.75191402715559, owner: 'Nithesh A N',  planteddate: '27 May 2018', story: 'Its a monument of our marriage, which shares the love story and happiness of our life' },\r\n{ uniqueId: 102, lat: 59.71921097726422, lng: 10.75191402715559, owner: 'Armin', planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday'  },\r\n{ uniqueId: 103, lat: 59.71921097726422, lng: 10.75191402715559, owner: 'Armin', planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday'  },\r\n{ uniqueId: 104, lat: 58.91921097726422, lng: 10.75191402715559 , owner: 'Armin',  planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday'},\r\n{ uniqueId: 105, lat: 59.91921097726422, lng: 10.95191402715559 , owner: 'Armin',  planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday'},\r\n{ uniqueId: 106, lat: 59.92921097726422, lng: 10.71191402715559 , owner: 'John ',  planteddate: '27 May 2018', story: 'This tree is the living memory of one of the friend.'},\r\n{ uniqueId: 107, lat: 59.91921097726422, lng: 10.72191402715559, owner: 'Lagertha ',  planteddate: '27 May 2018', story: 'The shieldmaide greatest of all time in viking era.' },\r\n{ uniqueId: 108, lat: 59.94921097726422, lng: 10.75191402715559 , owner: 'Bjorn',  planteddate: '27 May 2018', story: 'The king and legend Bjorn ironside.'},\r\n{ uniqueId: 109, lat: 59.92821097726422, lng: 10.75191402715559 , owner: 'Bjorn',  planteddate: '27 May 2018', story: 'The king and legend Bjorn ironside.'},\r\n{ uniqueId: 110, lat: 59.81921097726422, lng: 10.85191402715559 , owner: 'Ragnor',  planteddate: '27 May 2018', story: 'The gretest Viking king of all time.'},]\r\n\r\nexport const GetAllTree = () => {\r\n    return TreeLocationSampleData;\r\n}","import react from 'react'\r\nimport { Button, Container, Modal, ModalBody, ModalFooter, ModalHeader, Row, Col } from 'reactstrap'\r\nimport tree from '../assets/img/icons/tree.svg'\r\n\r\nexport const TreeStory = (props) => {\r\n    const { open, owner, onClose, story, planteddate } = props\r\n\r\n    return <Modal isOpen={open} toggle={onClose} >\r\n        <ModalHeader toggle={onClose}>{owner}'s Tree Planted on {planteddate}</ModalHeader>\r\n        <ModalBody>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <img alt=\"...\" src={tree} style={{ height: '10rem' }} />\r\n                    </Col>\r\n                    <Col>\r\n                        {story}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <Button color=\"primary\" onClick={onClose}>Close</Button>\r\n        </ModalFooter>\r\n    </Modal>\r\n}","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './Marker';\r\nimport { GetAllTree } from '../service/treedataservice';\r\nimport { TreeStory } from './TreeStory';\r\n\r\nexport const MAP_API_KEY = 'AIzaSyDmdNYP71cM7GUjxc5mDrn09j0SowsSStM';\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass PublicTreemap extends Component {\r\n  \r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.91921097726422, //56.865878,\r\n      lng: 10.75191402715559 // 24.279200\r\n    },\r\n    zoom: 11,\r\n  };\r\n\r\n  state= {\r\n    modalOpen: false,\r\n    story: undefined\r\n  }\r\n\r\n  modalClose = () =>{\r\n    this.setState({\r\n      modalOpen: false,\r\n      story: undefined\r\n    })\r\n  }\r\n\r\n  modalOpen = (story) =>{\r\n    debugger;\r\n    this.setState({\r\n      modalOpen: true,\r\n      story: story\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let data = GetAllTree();\r\n\r\n    if(this.props.user) {\r\n      data.filter(x=>x.owner == this.props.user)\r\n    }\r\n\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: MAP_API_KEY }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent\r\n            lat={56.86587822348912 }\r\n            lng={24.27920080145046}\r\n            text=\"Trees \"\r\n          />\r\n\r\n        {\r\n        GetAllTree().map(item => <Marker\r\n            key={`${item.owner}-${item.uniqueId}`}\r\n            story={item}\r\n            lat={ item.lat}\r\n            lng={item.lng}\r\n            onClick= {this.modalOpen}\r\n          />)\r\n          }\r\n        {this.state.story && <TreeStory open = {this.state.modalOpen} onClose = {this.modalClose} {...this.state.story} />}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicTreemap;","export default __webpack_public_path__ + \"static/media/coin.18703011.svg\";","export default __webpack_public_path__ + \"static/media/certificate.03a6823b.svg\";","import React from 'react'\r\n\r\nimport tree from '../assets/img/icons/tree.svg'\r\nimport coin from '../assets/img/icons/coin.svg'\r\nimport certificate from '../assets/img/icons/certificate.svg'\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    CardTitle,\r\n    CardText,\r\n    CardSubtitle\r\n} from \"reactstrap\";\r\n\r\n\r\nexport const PrivateHome = () => {\r\n    return <Container>\r\n        <Row>\r\n            <Col>\r\n                <Wallet />\r\n            </Col>\r\n            <Col>\r\n                <Asset />\r\n            </Col>\r\n            <Col>\r\n                <Certificate />\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}\r\n\r\nexport const Wallet = () => {\r\n    return <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">5</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">TCN Wallet</CardSubtitle>\r\n        </CardBody>\r\n        <img width=\"100%\" src={coin} alt=\"Card image cap\" style={{height: '5rem'}}/>\r\n        <CardBody>\r\n          <CardText>Your tree coin balance.</CardText>\r\n        </CardBody>\r\n      </Card>\r\n}\r\n\r\nexport const Asset = () => {\r\n    return <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">You own 5</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Number of Trees</CardSubtitle>\r\n        </CardBody>\r\n        <img width=\"100%\" src={tree} alt=\"Card image cap\" style={{height: '5rem'}}/>\r\n        <CardBody>\r\n          <CardText>Your tree assets.</CardText>\r\n        </CardBody>\r\n      </Card>\r\n}\r\n\r\nexport const Certificate = () => {\r\n    return <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\"> 2 </CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Certificate or Bagdes</CardSubtitle>\r\n        </CardBody>\r\n        <img width=\"100%\" src={certificate} alt=\"Card image cap\" style={{height: '5rem'}}/>\r\n        <CardBody>\r\n          <CardText>Your certificate and badges.</CardText>\r\n        </CardBody>\r\n      </Card>\r\n}","import React from 'react'\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport PublicTreemap from \"./PublicTreeMap\";\r\nimport tree from '../assets/img/icons/tree.svg'\r\nimport { PrivateHome } from './PrivateHome';\r\n\r\nexport const PublicHome = ({user}) => {\r\n    return <main>\r\n        <div className=\"position-relative\">\r\n            <section className=\"section section-lg section-shaped pb-250\">\r\n                <Bubbles />\r\n                <section style={{marginBottom: '10px'}}>\r\n                {user && <PrivateHome />}\r\n                </section>\r\n                <section>\r\n                    <PublicTreemap user={user}/>\r\n                </section>\r\n            </section>\r\n        </div>\r\n    </main>\r\n}\r\n\r\nexport const TreeBadge = ({ count }) => {\r\n    return <Button color=\"primary\" type=\"button\">\r\n        <Badge className=\"badge-white\">{count || ''}</Badge>\r\n        <TreeIcon />\r\n    </Button>\r\n}\r\n\r\nexport const TreeIcon = () => {\r\n    return <span className=\"btn-inner--icon mr-1\" style={{ minWidth: '25px' }}>\r\n    <img alt=\"...\" src={tree} />\r\n</span>\r\n}\r\n\r\nexport const Bubbles = () => {\r\n    return <div className=\"shape shape-style-1 shape-default\">\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n    </div>\r\n}","\nimport React from \"react\";\n// reactstrap components\nimport {\n  Button,\n  UncontrolledCollapse,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\nimport { NewTreeStory } from \"./NewTreeStory\";\nimport { TreeBadge } from \"./PublicHome\";\n\nclass DemoNavbar extends React.Component {\n  state = {\n    collapseClasses: \"\",\n    collapseOpen: false,\n  };\n\n  onExiting = () => {\n    this.setState({\n      collapseClasses: \"collapsing-out\"\n    });\n  };\n\n  onExited = () => {\n    this.setState({\n      collapseClasses: \"\"\n    });\n  };\n\n  onLogin  = (e) => {\n    e.preventDefault();\n    if(this.props.isLoggedIn) {\n      this.setState({\n        openModal: true\n      })\n    } else {\n      window.sessionStorage.setItem('logedin', 'Armin')\n      this.props.login();\n    }\n  }\n\n  closeModal = () => {\n    this.setState({\n      openModal: false\n    })\n  }\n\n  logOut = (e) => {\n    e.preventDefault();\n    window.sessionStorage.removeItem('logedin')\n    this.props.login();\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header-global\">\n          <Navbar\n            className=\"navbar-main navbar-transparent navbar-light headroom\"\n            expand=\"lg\"\n            id=\"navbar-main\"\n          >\n            <Container>\n              <UncontrolledCollapse\n                toggler=\"#navbar_global\"\n                navbar\n                className={this.state.collapseClasses}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <div className=\"navbar-collapse-header\">\n                  <Row>\n                    <Col className=\"collapse-brand\" xs=\"6\">\n                      \n                        <img\n                          alt=\"...\"\n                          src={require(\"../assets/img/brand/argon-react.png\")}\n                        />\n\n                    </Col>\n                    <Col className=\"collapse-close\" xs=\"6\">\n                      <button className=\"navbar-toggler\" id=\"navbar_global\">\n                        <span />\n                        <span />\n                      </button>\n                    </Col>\n                  </Row>\n                </div>\n                <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\n                  <UncontrolledDropdown nav>\n                    <DropdownToggle nav>\n                      <i className=\"ni ni-ui-04 d-lg-none mr-1\" />\n                      <span className=\"nav-link-inner--text\">Global Garden</span>\n                    </DropdownToggle>\n                    <DropdownMenu className=\"dropdown-menu-xl\">\n                      <div className=\"dropdown-menu-inner\">\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/overview?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-primary rounded-circle text-white\">\n                            <i className=\"ni ni-spaceship\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Getting started\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Register and plant a tree.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/colors?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-success rounded-circle text-white\">\n                            <i className=\"ni ni-palette\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Foundation\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              About global garden foundation.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alert?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-warning rounded-circle text-white\">\n                            <i className=\"ni ni-ui-04\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h5 className=\"heading text-warning mb-md-1\">\n                              Trees\n                            </h5>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Browse our planted trees.\n                            </p>\n                          </Media>\n                        </Media>\n                      </div>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                  \n                </Nav>\n                <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.facebook.com/globalgarden\"\n                      id=\"tooltip333589074\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-facebook-square\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Facebook\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip333589074\">\n                      Like us on Facebook\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.instagram.com/globalgarden\"\n                      id=\"tooltip356693867\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-instagram\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Instagram\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip356693867\">\n                      Follow us on Instagram\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://twitter.com/globalgarden\"\n                      id=\"tooltip184698705\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-twitter-square\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Twitter\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip184698705\">\n                      Follow us on Twitter\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem className=\"d-none d-lg-block ml-lg-4\">\n                  <span style={{color: 'white', marginRight: '5px'}}>{ this.props.isLoggedIn ? `Hello ${this.props.isLoggedIn}`: ''}</span>\n                  { this.props.isLoggedIn && <Button  onClick={this.logOut}>Log out</Button> }\n                  <Button\n                      className=\"btn-neutral btn-icon\"\n                      color=\"default\"\n                      href=\"#\"\n                      onClick={this.onLogin}\n                    > \n                      <span className=\"btn-inner--icon\">\n                        <i className=\"fa fa-cloud-download mr-2\" />\n                      </span>\n                      <span className=\"nav-link-inner--text ml-1\">\n                        \n                        {this.props.isLoggedIn ? 'Share a tree story' : 'Signin'}\n                      </span>\n                    </Button>\n                    \n                  </NavItem>\n                </Nav>\n              </UncontrolledCollapse>\n              <NewTreeStory open = {this.state.openModal} onClose= {this.closeModal}/>\n            </Container>\n          </Navbar>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default DemoNavbar;\n","\r\nimport React, { useState } from \"react\";\r\n// core components\r\nimport DemoNavbar from \"../components/DemoNavbar\";\r\nimport { PublicHome } from \"./PublicHome\";\r\n\r\nconst HomePage = () =>{\r\n\r\n  const user  = window.sessionStorage.getItem('logedin')\r\n    const[render, setRender] = useState(Date.now)\r\n\r\n    const reRender = () => {\r\n      setRender(Date.now)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <DemoNavbar isLoggedIn={user} login = {reRender}/>\r\n        <PublicHome user={user}/>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import './App.css';\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\nimport \"./assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport \"./assets/css/argon-design-system-react.css\";\n\nimport  HomePage  from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/argon-react.128d71d3.png\";"],"sourceRoot":""}