{"version":3,"sources":["service/treedataservice.js","assets/img/icons/tree.svg","components/NewTreeStory.jsx","assets/img/logo.JPG","components/DemoNavbar.js","components/Marker.jsx","components/TreeStory.jsx","components/PublicTreeMap.jsx","assets/img/icons/gg_map_icon.png","assets/img/icons/coin.svg","assets/img/icons/certificate.svg","components/PrivateHome.jsx","components/PublicHome.jsx","components/HomePage.jsx","App.js","reportWebVitals.js","index.js","assets/img/brand/argon-react.png"],"names":["TreeLocationSampleData","treeDataService","localStorage","getItem","setItem","JSON","stringify","data","parse","treedata","push","length","NewTreeStory","props","open","onClose","useState","uniqueId","getNextId","lat","undefined","lng","owner","planteddate","story","imgUrl","title","storyData","setStory","onChange","e","target","name","value","Modal","isOpen","toggle","ModalHeader","ModalBody","Container","Row","Col","FormGroup","Label","for","Input","type","id","placeholder","style","color","fontSize","ModalFooter","Button","onClick","addNewTree","alert","DemoNavbar","state","collapseClasses","collapseOpen","onExiting","setState","onExited","onLogin","preventDefault","isLoggedIn","openModal","window","sessionStorage","login","closeModal","logOut","removeItem","className","Navbar","expand","UncontrolledCollapse","toggler","navbar","this","xs","alt","src","require","Nav","UncontrolledDropdown","nav","DropdownToggle","logo","marginTop","DropdownMenu","Media","href","body","NavItem","NavLink","UncontrolledTooltip","delay","marginRight","React","Component","Wrapper","styled","div","Marker","TreeStory","height","alignItems","align","Card","inverse","CardText","AnyReactComponent","text","PublicTreemap","modalOpen","modalClose","width","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","getAllTree","map","item","defaultProps","PrivateHome","Wallet","CardBody","CardTitle","tag","CardSubtitle","coin","Asset","tree","marginLeft","Certificate","certificate","PublicHome","user","marginBottom","TreeIcon","Bubbles","HomePage","Date","now","setRender","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7d78d69.chunk.js","sourcesContent":["const TreeLocationSampleData = []\r\n\r\n// [{ uniqueId: 101, lat: 59.81921097726422, lng: 10.75191402715559, owner: 'Beckhan',  planteddate: '30 Sep 2021', \r\n//     title: 'LVM hackathone monument.',\r\n//     story: 'This tree is planted as a monument for LVM hackathone.', imgUrl:'https://drive.google.com/uc?export=view&id=127Mrr3gd-1VGcU_JY5FYdnIQ2B8nBDPh' },\r\n//     { uniqueId: 102, lat: 59.903306, lng: 10.757917 , owner: 'Geir Andersen',  planteddate: '30 Sep 2021', \r\n//     title: 'Oslo Losæter . Project no.1 Geir Andersen.',\r\n//     story: 'This tree is planted as a monument for LVM hackathone in Oslo Losæter by Geir Andersen.', imgUrl:'https://drive.google.com/uc?export=view&id=127Mrr3gd-1VGcU_JY5FYdnIQ2B8nBDPh' }]\r\n// [\r\n// { uniqueId: 101, lat: 59.81921097726422, lng: 10.75191402715559, owner: 'Nithesh A N',  planteddate: '27 May 2018', story: 'Its a monument of our marriage, which shares the love story and happiness of our life', imgUrl:'' },\r\n// { uniqueId: 102, lat: 59.71921097726422, lng: 10.75191402715559, owner: 'Armin', planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday' , imgUrl:'' },\r\n// { uniqueId: 103, lat: 59.71921097726422, lng: 10.75191402715559, owner: 'Armin', planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday' , imgUrl:'' },\r\n// { uniqueId: 104, lat: 58.91921097726422, lng: 10.75191402715559 , owner: 'Armin',  planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday', imgUrl:''},\r\n// { uniqueId: 105, lat: 59.91921097726422, lng: 10.95191402715559 , owner: 'Armin',  planteddate: '27 May 2018', story: 'For marking the happiness and joy of Armin\\'s son\\'s birthday', imgUrl:''},\r\n// { uniqueId: 106, lat: 59.92921097726422, lng: 10.71191402715559 , owner: 'John ',  planteddate: '27 May 2018', story: 'This tree is the living memory of one of the friend.', imgUrl:''},\r\n// { uniqueId: 107, lat: 59.91921097726422, lng: 10.72191402715559, owner: 'Lagertha ',  planteddate: '27 May 2018', story: 'The shieldmaide greatest of all time in viking era.' , imgUrl:''},\r\n// { uniqueId: 108, lat: 59.94921097726422, lng: 10.75191402715559 , owner: 'Bjorn',  planteddate: '27 May 2018', story: 'The king and legend Bjorn ironside.', imgUrl:''},\r\n// { uniqueId: 109, lat: 59.92821097726422, lng: 10.75191402715559 , owner: 'Bjorn',  planteddate: '27 May 2018', story: 'The king and legend Bjorn ironside.', imgUrl:''},\r\n// { uniqueId: 110, lat: 59.81921097726422, lng: 10.85191402715559 , owner: 'Ragnor',  planteddate: '27 May 2018', story: 'The gretest Viking king of all time.', imgUrl:''}\r\n// ]\r\n\r\n// export const GetAllTree = () => {\r\n//     return TreeLocationSampleData;\r\n// }\r\n\r\nclass TreeDataService {\r\n    constructor() {\r\n        if(!localStorage.getItem('treedata')){\r\n            localStorage.setItem('treedata', JSON.stringify({data: TreeLocationSampleData}))\r\n        }\r\n    }\r\n\r\n    getAllTree () {\r\n        return  JSON.parse(localStorage.getItem('treedata')).data;\r\n    }\r\n\r\n    addNewTree (treedata) {\r\n        const data =  JSON.parse(localStorage.getItem('treedata')).data;\r\n        data.push(treedata);\r\n        localStorage.setItem('treedata', JSON.stringify({data: data}))\r\n        return data;\r\n    }\r\n\r\n    getNextId() {\r\n        const data =  JSON.parse(localStorage.getItem('treedata')).data;\r\n        return 101 + data.length;\r\n    }\r\n}\r\n\r\nconst treeDataService = new TreeDataService()\r\nexport default treeDataService;","export default __webpack_public_path__ + \"static/media/tree.c19a9df7.svg\";","import react, { useState } from 'react'\r\nimport { Button, Container, Modal, ModalBody, ModalFooter, ModalHeader, Row, Col, Input, Label, FormGroup } from 'reactstrap'\r\nimport tree from '../assets/img/icons/tree.svg'\r\nimport treeDataService from '../service/treedataservice'\r\n\r\nexport const NewTreeStory = (props) => {\r\n    const { open, onClose } = props\r\n    const [storyData, setStory] =  useState({ uniqueId: treeDataService.getNextId(), lat: undefined, lng: undefined, owner: '',  \r\n                                                planteddate: '', story: '', imgUrl:'', title: ''})\r\n\r\n    const onChange = (e) => {\r\n        let data = {...storyData, [e.target.name]: e.target.value}\r\n        setStory(data)\r\n    }\r\n\r\n    const onAdd = (e) => {\r\n        treeDataService.addNewTree(storyData);\r\n        alert('Successfully added!')\r\n        onClose()\r\n    }\r\n\r\n    return <Modal isOpen={open} toggle={onClose} >\r\n        <ModalHeader toggle={onClose}>Submit the request to plant a Tree.</ModalHeader>\r\n        <ModalBody>\r\n            <Container>\r\n                {/* <Row>\r\n                    <Col></Col>\r\n                    <Col><img alt=\"...\" src={tree} style={{ height: '5rem' }} /></Col>\r\n                    <Col></Col>\r\n                </Row> */}\r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"title\">Title</Label>\r\n                            <Input type=\"text\" name=\"title\" id=\"title\"  value = {storyData.title} onChange={onChange}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row> \r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"story\" name=\"Location\">Location</Label>\r\n                            <Input type=\"text\"></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row> <Label for=\"story\">Cordinates</Label>\r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" placeholder=\"Lattitude\" name=\"lat\" id=\"lat\" value = {storyData.lat} onChange={onChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" placeholder=\"Longittude\" name=\"lng\" id=\"lng\"  value = {storyData.lng} onChange={onChange}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row><span style={{color: \"green\", fontSize: '0.75rem'}}>*Please enter cordinates for time being, location API will integrate later.</span>\r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"story\">Owner</Label>\r\n                            <Input type=\"text\" name=\"owner\" id=\"owner\"  value = {storyData.owner} onChange={onChange}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row> \r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"story\">Your story behind the tree</Label>\r\n                            <Input type=\"textarea\" name=\"story\" id=\"story\"  value = {storyData.story} onChange={onChange}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row> \r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"story\">Planted Date</Label>\r\n                            <Input type=\"date\" name=\"planteddate\" id=\"planteddate\"  value = {storyData.planteddate} onChange={onChange}/>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row> \r\n                <Row>\r\n                    <Col>\r\n                        <FormGroup>\r\n                            <Label for=\"story\">Image URL</Label>\r\n                            <Input type=\"text\" name='imgUrl' id='imgUrl'  value = {storyData.imgUrl} onChange={onChange}    ></Input>\r\n                            <span style={{color: \"green\", fontSize: '0.75rem'}}>*Please upload the image in any public cloud (dropbox, google drive, onedrive) and paste the public url here.</span>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <Button color=\"primary\" onClick={onAdd}>Submit</Button>\r\n            <Button color=\"secondary\" onClick={onClose}>Close</Button>\r\n        </ModalFooter>\r\n    </Modal>\r\n}","export default __webpack_public_path__ + \"static/media/logo.58c256d2.JPG\";","\nimport React from \"react\";\n// reactstrap components\nimport {\n  Button,\n  UncontrolledCollapse,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\nimport { NewTreeStory } from \"./NewTreeStory\";\nimport logo from '../assets/img/logo.JPG'\n\nclass DemoNavbar extends React.Component {\n  state = {\n    collapseClasses: \"\",\n    collapseOpen: false,\n  };\n\n  onExiting = () => {\n    this.setState({\n      collapseClasses: \"collapsing-out\"\n    });\n  };\n\n  onExited = () => {\n    this.setState({\n      collapseClasses: \"\"\n    });\n  };\n\n  onLogin  = (e) => {\n    e.preventDefault();\n    if(this.props.isLoggedIn) {\n      this.setState({\n        openModal: true\n      })\n    } else {\n      window.sessionStorage.setItem('logedin', 'Armin')\n      this.props.login();\n    }\n  }\n\n  closeModal = () => {\n    this.setState({\n      openModal: false\n    })\n  }\n\n  logOut = (e) => {\n    e.preventDefault();\n    window.sessionStorage.removeItem('logedin')\n    this.props.login();\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header-global\">\n          <Navbar\n            className=\"navbar-main navbar-transparent navbar-light headroom\"\n            expand=\"lg\"\n            id=\"navbar-main\"\n          >\n            <Container>\n              <UncontrolledCollapse\n                toggler=\"#navbar_global\"\n                navbar\n                className={this.state.collapseClasses}\n                onExiting={this.onExiting}\n                onExited={this.onExited}\n              >\n                <div className=\"navbar-collapse-header\">\n                  <Row>\n                    <Col className=\"collapse-brand\" xs=\"6\">\n                      \n                        <img\n                          alt=\"...\"\n                          src={require(\"../assets/img/brand/argon-react.png\")}\n                        />\n\n                    </Col>\n                    <Col className=\"collapse-close\" xs=\"6\">\n                      <button className=\"navbar-toggler\" id=\"navbar_global\">\n                        <span />\n                        <span />\n                      </button>\n                    </Col>\n                  </Row>\n                </div>\n                <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\n                  <UncontrolledDropdown nav>\n                    <DropdownToggle nav>\n                      <i className=\"ni ni-ui-04 d-lg-none mr-1\" />\n                      <img src={logo} style={{marginTop: \"-15px\"}}/>\n                    </DropdownToggle>\n                    <DropdownMenu className=\"dropdown-menu-xl\">\n                      <div className=\"dropdown-menu-inner\">\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/overview?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-primary rounded-circle text-white\">\n                            <i className=\"ni ni-spaceship\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Getting started\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Register and plant a tree.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/colors?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-success rounded-circle text-white\">\n                            <i className=\"ni ni-palette\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h6 className=\"heading text-primary mb-md-1\">\n                              Foundation\n                            </h6>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              About global garden foundation.\n                            </p>\n                          </Media>\n                        </Media>\n                        <Media\n                          className=\"d-flex align-items-center\"\n                          href=\"https://demos.creative-tim.com/argon-design-system-react/#/documentation/alert?ref=adsr-navbar\"\n                          target=\"_blank\"\n                        >\n                          <div className=\"icon icon-shape bg-gradient-warning rounded-circle text-white\">\n                            <i className=\"ni ni-ui-04\" />\n                          </div>\n                          <Media body className=\"ml-3\">\n                            <h5 className=\"heading text-warning mb-md-1\">\n                              Trees\n                            </h5>\n                            <p className=\"description d-none d-md-inline-block mb-0\">\n                              Browse our planted trees.\n                            </p>\n                          </Media>\n                        </Media>\n                      </div>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                  \n                </Nav>\n                <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.facebook.com/ggkunst\"\n                      id=\"tooltip333589074\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-facebook-square\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Facebook\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip333589074\">\n                      Like us on Facebook\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://www.instagram.com/ggkunst\"\n                      id=\"tooltip356693867\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-instagram\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Instagram\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip356693867\">\n                      Follow us on Instagram\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className=\"nav-link-icon\"\n                      href=\"https://twitter.com/ggkunst\"\n                      id=\"tooltip184698705\"\n                      target=\"_blank\"\n                    >\n                      <i className=\"fa fa-twitter-square\" />\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\n                        Twitter\n                      </span>\n                    </NavLink>\n                    <UncontrolledTooltip delay={0} target=\"tooltip184698705\">\n                      Follow us on Twitter\n                    </UncontrolledTooltip>\n                  </NavItem>\n                  <NavItem className=\"d-none d-lg-block ml-lg-4\">\n                  <span style={{color: 'white', marginRight: '5px'}}>{ this.props.isLoggedIn ? `Hello ${this.props.isLoggedIn}`: ''}</span>\n                  { this.props.isLoggedIn && <Button  onClick={this.logOut}>Log out</Button> }\n                  <Button\n                      className=\"btn-neutral btn-icon\"\n                      color=\"default\"\n                      href=\"#\"\n                      onClick={this.onLogin}\n                    > \n                      <span className=\"btn-inner--icon\">\n                        <i className=\"fa fa-cloud-download mr-2\" />\n                      </span>\n                      <span className=\"nav-link-inner--text ml-1\">\n                        \n                        {this.props.isLoggedIn ? 'Share a tree story' : 'Signin'}\n                      </span>\n                    </Button>\n                    \n                  </NavItem>\n                </Nav>\n              </UncontrolledCollapse>\n              <NewTreeStory open = {this.state.openModal} onClose= {this.closeModal}/>\n            </Container>\n          </Navbar>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default DemoNavbar;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TreeIcon } from './PublicHome';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  user-select: none;\r\n  transform: translate(-50%, -50%);\r\n  cursor: ${(props) => (props.onClick ? 'pointer' : 'default')};\r\n  &:hover {\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Marker = ({ story, onClick }) => (\r\n    <Wrapper\r\n        alt={story.owner}\r\n        onClick={()=> {onClick(story)}}\r\n    >\r\n        <TreeIcon />\r\n    </Wrapper>\r\n);\r\n\r\n\r\nexport default Marker;","import react from 'react'\r\nimport { Button, Container, Modal, ModalBody, ModalFooter, ModalHeader, Row, Col, Card, CardTitle, CardText } from 'reactstrap'\r\n\r\nexport const TreeStory = (props) => {\r\n    const { open, owner, onClose, story, planteddate, imgUrl, uniqueId , lat, lng, title} = props\r\n\r\n    return <Modal isOpen={open} toggle={onClose} >\r\n        <ModalHeader toggle={onClose}>{title} </ModalHeader>\r\n        <ModalBody>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <img alt=\"...\" src={imgUrl} style={{ height: '10rem', alignItems: \"center\" }} align =\"center\" />\r\n                    </Col>\r\n                </Row> <br></br> <Row></Row>\r\n\r\n\r\n                <Card body inverse color=\"primary\">\r\n        <CardText> <Row>\r\n            <Col>ID </Col><Col>{uniqueId}</Col></Row>\r\n                        <Row><Col>Location</Col><Col>{`${lat}, ${lng}`}</Col></Row>\r\n                        <Row><Col>Date </Col><Col>{planteddate}</Col></Row>\r\n                        <Row><Col>Owner </Col><Col>{owner}</Col></Row>\r\n                </CardText>\r\n      </Card>\r\n      <br></br>\r\n                <Row>\r\n                <Col>\r\n                    {story}\r\n                </Col>\r\n                </Row>\r\n            </Container>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <Button color=\"primary\" onClick={onClose}>Close</Button>\r\n        </ModalFooter>\r\n    </Modal>\r\n}","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './Marker';\r\nimport treeDataService from '../service/treedataservice';\r\nimport { TreeStory } from './TreeStory';\r\n\r\nexport const MAP_API_KEY = 'AIzaSyDmdNYP71cM7GUjxc5mDrn09j0SowsSStM';\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass PublicTreemap extends Component {\r\n  \r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.91921097726422, //56.865878,\r\n      lng: 10.75191402715559 // 24.279200\r\n    },\r\n    zoom: 11,\r\n  };\r\n\r\n  state= {\r\n    modalOpen: false,\r\n    story: undefined\r\n  }\r\n\r\n  modalClose = () =>{\r\n    this.setState({\r\n      modalOpen: false,\r\n      story: undefined\r\n    })\r\n  }\r\n\r\n  modalOpen = (story) =>{\r\n    this.setState({\r\n      modalOpen: true,\r\n      story: story\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '70vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: MAP_API_KEY }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent\r\n            lat={56.86587822348912 }\r\n            lng={24.27920080145046}\r\n            text=\"Trees \"\r\n          />\r\n\r\n        {\r\n        treeDataService.getAllTree().map(item => <Marker\r\n            key={`${item.owner}-${item.uniqueId}`}\r\n            story={item}\r\n            lat={ item.lat}\r\n            lng={item.lng}\r\n            onClick= {this.modalOpen}\r\n          />)\r\n          }\r\n        {this.state.story && <TreeStory open = {this.state.modalOpen} onClose = {this.modalClose} {...this.state.story} />}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicTreemap;","export default __webpack_public_path__ + \"static/media/gg_map_icon.4f31e7cc.png\";","export default __webpack_public_path__ + \"static/media/coin.18703011.svg\";","export default __webpack_public_path__ + \"static/media/certificate.03a6823b.svg\";","import React from 'react'\r\n\r\nimport tree from '../assets/img/icons/gg_map_icon.png'\r\nimport coin from '../assets/img/icons/coin.svg'\r\nimport certificate from '../assets/img/icons/certificate.svg'\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    CardTitle,\r\n    CardText,\r\n    CardSubtitle\r\n} from \"reactstrap\";\r\n\r\n\r\nexport const PrivateHome = () => {\r\n    return <Container><br></br>\r\n        <Row>\r\n            <Col>\r\n                <Wallet />\r\n            </Col>\r\n            <Col>\r\n                <Asset />\r\n            </Col>\r\n            <Col>\r\n                <Certificate />\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}\r\n\r\nexport const Wallet = () => {\r\n    return <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">5</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">TCN Wallet</CardSubtitle>\r\n        </CardBody>\r\n        <img width=\"100%\" src={coin} alt=\"Card image cap\" style={{height: '5rem'}}/>\r\n        <CardBody>\r\n          <CardText>Your tree coin balance.</CardText>\r\n        </CardBody>\r\n      </Card>\r\n}\r\n\r\nexport const Asset = () => {\r\n    return <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">You own 5</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Number of Trees</CardSubtitle>\r\n        </CardBody>\r\n        <img width=\"100%\" src={tree} alt=\"Card image cap\" style={{height: '5rem', width:'5rem', marginLeft: \"35%\"}}/>\r\n        <CardBody>\r\n          <CardText>Your tree assets.</CardText>\r\n        </CardBody>\r\n      </Card>\r\n}\r\n\r\nexport const Certificate = () => {\r\n    return <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\"> 2 </CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Badges</CardSubtitle>\r\n        </CardBody>\r\n        <img width=\"100%\" src={certificate} alt=\"Card image cap\" style={{height: '5rem'}}/>\r\n        <CardBody>\r\n          <CardText>Your tree badges.</CardText>\r\n        </CardBody>\r\n      </Card>\r\n}","import React from 'react'\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport PublicTreemap from \"./PublicTreeMap\";\r\nimport tree from '../assets/img/icons/gg_map_icon.png'\r\nimport { PrivateHome } from './PrivateHome';\r\n\r\nexport const PublicHome = ({user}) => {\r\n    return <main>\r\n        <div className=\"position-relative\">\r\n            <section className=\"section section-lg section-shaped pb-250\">\r\n                <Bubbles />\r\n                <section style={{marginBottom: '10px'}}>\r\n                {user && <PrivateHome />}\r\n                </section>\r\n                <section>\r\n                    <PublicTreemap user={user}/>\r\n                </section>\r\n            </section>\r\n        </div>\r\n    </main>\r\n}\r\n\r\nexport const TreeBadge = ({ count }) => {\r\n    return <Button color=\"primary\" type=\"button\">\r\n        <Badge className=\"badge-white\">{count || ''}</Badge>\r\n        <TreeIcon />\r\n    </Button>\r\n}\r\n\r\nexport const TreeIcon = () => {\r\n    return <span className=\"btn-inner--icon mr-1\" style={{ height: '2.5rem' }}>\r\n    <img alt=\"...\" src={tree} style={{ height: '2.5rem' }}/>\r\n</span>\r\n}\r\n\r\nexport const Bubbles = () => {\r\n    return <div className=\"shape shape-style-1 shape-default\">\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n        <span />\r\n    </div>\r\n}","\r\nimport React, { useState } from \"react\";\r\n// core components\r\nimport DemoNavbar from \"../components/DemoNavbar\";\r\nimport { PublicHome } from \"./PublicHome\";\r\n\r\nconst HomePage = () =>{\r\n\r\n  const user  = window.sessionStorage.getItem('logedin')\r\n    const[render, setRender] = useState(Date.now)\r\n\r\n    const reRender = () => {\r\n      setRender(Date.now)\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <DemoNavbar isLoggedIn={user} login = {reRender}/>\r\n        <PublicHome user={user}/>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import './App.css';\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\nimport \"./assets/vendor/font-awesome/css/font-awesome.min.css\";\nimport \"./assets/css/argon-design-system-react.css\";\n\nimport  HomePage  from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/argon-react.128d71d3.png\";"],"sourceRoot":""}